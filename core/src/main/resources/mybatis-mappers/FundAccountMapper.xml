<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="FundAccountMapper">
    <resultMap id="FundAccount" type="FundAccount">
        <id property="id" column="id"/>
        <result property="ts" column="ts"/>
        <result property="de" column="de"/>

        <result property="info.name" column="name"/>
        <result property="info.icon" column="icon"/>

        <result property="type" column="type"/>
        <result property="fields" column="fields" typeHandler="Json"/>

        <association property="addon" resultMap="MetadataMapper.TransferAddon" columnPrefix="addon_" />

        <discriminator column="info" javaType="int">
            <case value="1" resultMap="DepositOption"/>
        </discriminator>
    </resultMap>

    <resultMap id="DepositOption" type="DepositOption" autoMapping="false">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="icon" column="icon"/>
    </resultMap>

    <sql id="FundAccountColumns">
        t.name, t.type, t.icon, convert( column_json(t.fields) using utf8 ) as fields
    </sql>

    <sql id="FundAccountFilter" >
        <where> <if test="filter != null">
            <!-- Entity filter -->
            <if test="filter.id != null"> and t.id = #{filter.id} </if>
            <if test="filter.de != null"> and t.de = #{filter.de} </if>

            <!-- FundAccount filter -->
            <if test="filter.name != null"> and t.name = #{filter.name} </if>
            <if test="filter.type != null"> and t.type = #{filter.type} </if>
            <if test="filter.fields != null">
                <foreach index="field" item="value" collection="filter.fields.entrySet()">
                    and column_get(t.fields, #{field} as <include refid="Common.DynamicColumnDataType"/>) = #{value}
                </foreach>
            </if>
        </if> </where>
    </sql>

    <sql id="TransferAddonColumns">
        <if test="filter != null and filter.addon">
            m.id as addon_id, m.de as addon_de, m.ts as addon_ts,
            column_get(m.fields, 'mode' as int) as addon_mode,
            column_get(m.fields, 'type' as int) as addon_type,
            column_get(m.fields, 'content' as char) as addon_content,
        </if>
    </sql>

    <sql id="TransferAddonJoin">
        <if test="filter != null and filter.addon">
            inner join metadata m
            on m.catalog = 'FundAccountType' and m.value = type and m.de = 0
        </if>
    </sql>

    <insert id="create">
        insert into fund_account (
            id,
            name, icon, type,
            fields
        ) values (
            #{id},
            #{info.name}, #{info.icon}, #{type}
            <trim prefix=",">
                <if test="!fields.isEmpty()">
                    <trim prefix="column_create(" suffixOverrides="," suffix=")">
                        <foreach index="field" item="value" collection="fields.entrySet()">
                            #{field}, #{value},
                        </foreach>
                    </trim>
                </if>
            </trim>
        )
    </insert>

    <delete id="delete" >
        <bind name="filter" value="_parameter" />
        delete from fund_account <include refid="FundAccountFilter"/>
    </delete>

    <update id="update">
        update fund_account
        <set>
            <!-- Entity updatable field -->
            <if test="data.de != null"> de = #{data.de}, </if>

            <!-- DepositOption updatable fields -->
            <if test="data.info.name != null"> name = #{data.info.name}, </if>
            <if test="data.info.icon != null"> icon = #{data.info.icon}, </if>

            <!-- FundAccount updatable fields -->
            <if test="data.type != null"> type = #{data.type}, </if>
            <if test="!data.fields.isEmpty()">
                <trim prefix="fields = column_create(" suffixOverrides="," suffix=")">
                    <foreach index="field" item="value" collection="data.fields.entrySet()">
                        #{field}, #{value},
                    </foreach>
                </trim>
            </if>
        </set>
        <include refid="FundAccountFilter"/>
    </update>

    <select id="list" resultMap="FundAccount">
        <bind name="filter" value="_parameter" />
        select
            <include refid="Common.EntityColumns" />,
            <include refid="FundAccountColumns" />,
            <include refid="TransferAddonColumns" />
            #{info} as info
        from fund_account t
        inner join metadata m <!-- Use inner join for data integrity( fund account 1_To_1 map to addon) -->
        on m.catalog = 'FundAccountType' and m.value = type and m.de = 0
        <include refid="FundAccountFilter"/>
    </select>
</mapper>